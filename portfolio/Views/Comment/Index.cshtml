@model CommentIndexFilterView
@using System.Security.Claims

<a asp-action="Create" class="back-button">Create new comment</a>

<form method="get">
    <div>
        <label for="ProjectId">Project</label>
        <select asp-for="ProjectId" asp-items="Model.Projects"></select>
    </div>
    <div>
        <label for="UserId">User</label>
        <select asp-for="UserId" asp-items="Model.Users"></select>
    </div>
    <div>
        <label for="Content">Content</label>
        <input asp-for="Content" />
    </div>
    <button type="submit">Filter</button>
</form>

<table class="table">
    <thead>
        <tr>
            <th>Project</th>
            <th>User</th>
            <th>Content</th>
            <th>image</th>
            <th>действия</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var comment in Model.Comments)
        {
            <tr>
                <td>@comment.Project.Title</td>
                <td>@comment.User.UserName</td>
                <td>@comment.Text</td>
                <td>
                    
                    @if (@comment.Image!=null)
                    {
                        <img class="comment-image" style="width=50px" src="@comment.Image.Path"  />
                    }
                    else
                    {

                        <p>no picture</p>
                    }

                    </td>
                <td>

                    <a asp-action="Edit" asp-route-id="@comment.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@comment.Id">Details</a> |
                    @* <a asp-action="Delete" asp-route-id="@comment.Id">Delete</a> *@
                    @if (User.IsInRole("Admin") || (comment.UserId + "") == User.FindFirstValue(ClaimTypes.NameIdentifier))
                    {
                        <button type="button" class="btn btn-danger delete-comment" data-comment-id="@comment.Id">Delete</button>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<style>
    .comment-image{
        width: 50px;
        height: 50px;
    }
</style>
<script>
        document.addEventListener('DOMContentLoaded', function() {
        document.querySelectorAll('.delete-comment').forEach(button => {
            button.addEventListener('click', function() {
                const commentId = this.getAttribute('data-comment-id');

                if (confirm('Are you sure you want to delete this comment? This action cannot be undone.')) {
                    deleteComment(commentId);
                }
            });
        });

        function deleteComment(commentId) {
            fetch(`/Comment/Delete/${commentId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                credentials: 'same-origin'
            })
            .then(response => {
                if (response.ok) {
                    window.location.reload();
                } else {
                    alert('Failed to delete the comment. Please try again.');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while deleting the comment.');
            });
        }

    });
</script>